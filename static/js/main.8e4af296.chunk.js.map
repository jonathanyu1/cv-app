{"version":3,"sources":["components/GeneralInfo.js","components/NewSection.js","components/Education.js","components/NewSectionExp.js","components/Experience.js","components/NewSectionSkill.js","components/Skills.js","App.js","index.js"],"names":["GeneralInfo","id","text","labelClassName","inputClassName","inputPlaceHolder","className","NewSection","props","sectionList","isEdit","console","log","map","section","school","degree","fromDate","toDate","onClick","deleteSection","Education","handleChange","e","target","value","name","setState","prevState","toggleForm","formIsHidden","state","btnIsHidden","clearForm","uniqid","cancelForm","onSubmitForm","preventDefault","concat","filter","bind","this","onSubmit","htmlFor","onChange","type","Component","NewSectionExp","job","company","description","Experience","NewSectionSkill","skillList","skill","Skills","App","changeMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e4af296.chunk.js","sourcesContent":["import React from \"react\";\nimport EditableLabel from 'react-inline-editing';\n\nconst GeneralInfo = () =>{\n\n    return (\n        <div id='generalInfoContainer'>\n            <div id='generalInfoLeft'>\n                <EditableLabel text='First Name' \n                    labelClassName = 'labelFirstName'\n                    inputClassName = 'inputFirstName'\n                    inputPlaceHolder = 'First Name'\n                />\n                <EditableLabel text='Last Name'\n                    labelClassName = 'labelLastName'\n                    inputClassName = 'inputLastName'\n                />\n\n            </div>\n            <div id='generalInfoRight'>\n                <div className='generalInfoRightDetails'>\n                    <span className=\"material-icons\">call</span>\n                    <EditableLabel text='Phone'\n                        labelClassName = 'labelPhone'\n                        inputClassName = 'inputPhone'\n                    />\n                </div>\n                <div className='generalInfoRightDetails'>\n                    <span className=\"material-icons\">mail</span>\n                    <EditableLabel text='Email'\n                        labelClassName = 'labelEmail'\n                        inputClassName = 'inputEmail'\n                    />\n                </div>\n                <div className='generalInfoRightDetails'>\n                    <span className=\"material-icons\">location_on</span>\n                    <EditableLabel text='Location'\n                        labelClassName = 'labelLocation'\n                        inputClassName = 'inputLocation'\n                    />\n                </div>\n                \n            </div>\n\n        </div>\n    )\n};\n\nexport default GeneralInfo","import React from 'react'\n\nconst NewSection = (props) =>{\n    const {sectionList, isEdit} = props;\n\n    console.log(isEdit);\n\n    return (\n        <div id='sectionListContainer'>\n            {sectionList.map((section)=>{\n                return (\n                    <div className='sectionContainer' key={section.id}>\n                        <div className='sectionLeft'>\n                            <div className='sectionSchool'>{section.school}</div>\n                            <div className='sectionDegree'>{section.degree}</div>\n                        </div>\n                        <div className='sectionRight'>\n                            <div className='sectionDate'>{section.fromDate} - {section.toDate}</div>\n                            <button className={isEdit ? 'btnDeleteSection' : 'hideVisibility'} onClick={()=> props.deleteSection(section.id)}>\n                                <span className=\"material-icons\">clear</span>\n                            </button>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default NewSection","import React, {Component} from 'react';\nimport uniqid from 'uniqid';\nimport NewSection from './NewSection';\n\nclass Education extends Component{\n    constructor(props){\n        super(props);\n\n        // this.newEducation = this.newEducation.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.deleteSection = this.deleteSection.bind(this);\n\n        this.state = {\n            section: {\n                school: '',\n                fromDate: '',\n                toDate: '',\n                degree: '',\n                id: uniqid(),\n            },\n            sectionList: [],\n            formIsHidden: true,\n            btnIsHidden: false,\n        };\n      }\n\n    handleChange = (e) =>{\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.value);\n        console.log(e.target.name);\n        this.setState(prevState =>({\n            section: {...prevState.section, [e.target.name]:e.target.value}\n          }));\n    }\n\n    toggleForm = () =>{\n        // https://www.dev-tips-and-tricks.com/toggle-visibility-with-react\n        this.setState({\n            formIsHidden: !this.state.formIsHidden,\n            btnIsHidden: !this.state.btnIsHidden\n        })\n    }\n\n    clearForm = () => {\n        console.log(this.state.section.id);\n        this.setState(prevState =>({\n            section: {...prevState.section,\n                school: '',\n                fromDate: '',\n                toDate: '',\n                degree: '',\n                id: uniqid(),\n            }\n          }));\n    }\n\n    cancelForm = () => {\n        // reset form inputs, hide form, unhide new button\n        this.clearForm();\n        this.toggleForm();\n    }\n\n    // newEducation = (e) =>{\n    //     console.log(e);\n    //     console.log(this);\n    //     // give form visible, hide btnNewEducation\n    //     this.toggleForm();\n    // }  \n\n    onSubmitForm = (e) =>{\n        e.preventDefault();\n        this.setState({\n            sectionList: this.state.sectionList.concat(this.state.section)\n            // sectionList: [...prevState.sectionList, this.state.section]\n        });\n        this.clearForm();\n        this.toggleForm();\n    }\n\n    deleteSection = (id) => {\n        console.log(id);\n        // https://stackoverflow.com/a/48598110\n        this.setState((prevState)=>({\n            sectionList: prevState.sectionList.filter(section=>section.id!==id),\n        }))\n    }\n    \n    render() {\n        const { sectionList } = this.state;\n        const { isEdit } = this.props;\n\n        return (\n        <div id='educationContainer'>\n            <div id='educationHeader'>Education</div>\n            <NewSection sectionList={sectionList} deleteSection={this.deleteSection} isEdit={isEdit}/>\n            <form id='educationForm' onSubmit={this.onSubmitForm} className={(this.state.formIsHidden || !isEdit) ? 'hide':'form'}>\n                {/* school */}\n                <div className='formDetail'>\n                    <label htmlFor='schoolInput'>University/College: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.section.school}\n                        type='text'\n                        id='schoolInput'\n                        name='school'\n                    />\n                </div>\n                {/* date from */}\n                <div className='formDetail'>\n                    <label htmlFor='fromDateInput'>From: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.section.fromDate}\n                        type='date'\n                        id='fromDateInput'\n                        name='fromDate'\n                    />\n                </div>\n                {/* date to */}\n                <div className='formDetail'>\n                    <label htmlFor='toDateInput'>To: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.section.toDate}\n                        type='date'\n                        id='toDateInput'\n                        name='toDate'\n                    />\n                </div>\n                {/* degree */}\n                <div className='formDetail'>\n                    <label htmlFor='degreeInput'>Degree: </label>\n                    <input\n                        onChange={this.handleChange}\n                        value={this.state.section.degree}\n                        type='text'\n                        id='degreeInput'\n                        name='degree'\n                    />\n                </div>\n                <div className='formBtnContainer'>\n                    <button\n                        id='btnAddEducation'\n                        type='submit'\n                        className='btnForm'\n                    >\n                        <span className='material-icons'>add_circle_outline</span>\n                    Add</button>\n\n                    <button\n                        id='btnCancelEducation'\n                        type='button'\n                        onClick={this.cancelForm}\n                        className='btnForm'\n                    > \n                        <span className=\"material-icons\">clear</span>\n                    Cancel</button>\n                </div>\n            </form>\n            <button \n                id='btnNewEducation' \n                onClick={this.toggleForm}\n                className={(this.state.btnIsHidden || !isEdit) ? 'hide':'btnNewSection'}\n                > \n                <span className='material-icons'>add_circle_outline</span>\n            New</button>\n\n        </div>\n        )\n    }\n}\n\nexport default Education\n","import React from 'react'\n\nconst NewSectionExp = (props) =>{\n    const {sectionList, isEdit} = props;\n\n    return (\n        <div id='sectionListContainer'>\n            {sectionList.map((section)=>{\n                return (\n                    <div className='sectionContainer' key={section.id}>\n                        <div className='sectionLeft'>\n                            <div className='sectionJob'>{section.job}</div>\n                            <div className='sectionCompany'>{section.company}</div>\n                            <div className='sectionDescription'>{section.description}</div>\n                        </div>\n                        <div className='sectionRight'>\n                            <div className='sectionDate'>{section.fromDate} - {section.toDate}</div>\n                            {/* <button className='btnDeleteSection' onClick={()=> props.deleteSection(section.id)}>\n                                <span className=\"material-icons\">clear</span>\n                            </button> */}\n                            <button className={isEdit ? 'btnDeleteSection':'hideVisibility'} onClick={()=> props.deleteSection(section.id)}>\n                                <span className=\"material-icons\">clear</span>\n                            </button>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default NewSectionExp","import React, {Component} from 'react';\nimport uniqid from 'uniqid';\nimport NewSectionExp from './NewSectionExp';\n\nclass Experience extends Component{\n    constructor(props){\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.deleteSection = this.deleteSection.bind(this);\n\n        this.state = {\n            section: {\n                job: '',\n                fromDate: '',\n                toDate: '',\n                company: '',\n                description: '',\n                id: uniqid(),\n            },\n            sectionList: [],\n            formIsHidden: true,\n            btnIsHidden: false,\n        };\n      }\n\n    handleChange = (e) =>{\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.value);\n        console.log(e.target.name);\n        this.setState(prevState =>({\n            section: {...prevState.section, [e.target.name]:e.target.value}\n          }));\n    }\n\n    toggleForm = () =>{\n        // https://www.dev-tips-and-tricks.com/toggle-visibility-with-react\n        this.setState({\n            formIsHidden: !this.state.formIsHidden,\n            btnIsHidden: !this.state.btnIsHidden\n        })\n    }\n\n    clearForm = () => {\n        console.log(this.state.section.id);\n        this.setState(prevState =>({\n            section: {...prevState.section,\n                job: '',\n                fromDate: '',\n                toDate: '',\n                company: '',\n                description: '',\n                id: uniqid(),\n            }\n          }));\n    }\n\n    cancelForm = () => {\n        // reset form inputs, hide form, unhide new button\n        this.clearForm();\n        this.toggleForm();\n    }\n\n    onSubmitForm = (e) =>{\n        e.preventDefault();\n        this.setState({\n            sectionList: this.state.sectionList.concat(this.state.section)\n        });\n        this.clearForm();\n        this.toggleForm();\n    }\n\n    deleteSection = (id) => {\n        console.log(id);\n        // https://stackoverflow.com/a/48598110\n        this.setState((prevState)=>({\n            sectionList: prevState.sectionList.filter(section=>section.id!==id),\n        }))\n    }\n\n      render() {\n        const { sectionList } = this.state;\n        const { isEdit } = this.props;\n\n        return (\n        <div id='expContainer'>\n            <div id='expHeader'>Experience</div>\n            <NewSectionExp isEdit={isEdit} sectionList={sectionList} deleteSection={this.deleteSection}/>\n            <form id='expForm' onSubmit={this.onSubmitForm} className={(this.state.formIsHidden || !isEdit) ? 'hide':'form'}>\n                {/* job */}\n                <div className='formDetail'>\n                    <label htmlFor='schoolInput'>Job Title: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.section.job}\n                        type='text'\n                        id='jobInput'\n                        name='job'\n                    />\n                </div>\n                {/* date from */}\n                <div className='formDetail'>\n                    <label htmlFor='expFromDateInput'>From: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.section.fromDate}\n                        type='date'\n                        id='expFromDateInput'\n                        name='fromDate'\n                    />\n                </div>\n                {/* date to */}\n                <div className='formDetail'>\n                    <label htmlFor='expToDateInput'>To: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.section.toDate}\n                        type='date'\n                        id='expToDateInput'\n                        name='toDate'\n                    />\n                </div>\n                {/* company */}\n                <div className='formDetail'>\n                    <label htmlFor='companyInput'>Company: </label>\n                    <input\n                        onChange={this.handleChange}\n                        value={this.state.section.company}\n                        type='text'\n                        id='companyInput'\n                        name='company'\n                    />\n                </div>\n                {/* description */}\n                <div className='formDetail'>\n                    <label htmlFor='expDescription'>Description: </label>\n                    <textarea\n                        onChange={this.handleChange}\n                        value={this.state.section.description}\n                        type='text'\n                        id='descriptionInput'\n                        name='description'\n                    >\n                    </textarea>\n                </div>\n\n                <div className='formBtnContainer'>\n                    <button\n                        id='btnAddExp'\n                        type='submit'\n                        className='btnForm'\n                    >\n                        <span className='material-icons'>add_circle_outline</span>\n                    Add</button>\n\n                    <button\n                        id='btnCancelExp'\n                        type='button'\n                        onClick={this.cancelForm}\n                        className='btnForm'\n                    > \n                        <span className=\"material-icons\">clear</span>\n                    Cancel</button>\n                </div>\n            </form>\n            <button \n                id='btnNewExp' \n                onClick={this.toggleForm}\n                className={(this.state.btnIsHidden || !isEdit) ? 'hide':'btnNewSection'}\n                > \n                <span className='material-icons'>add_circle_outline</span>\n            New</button>\n\n        </div>\n        )\n    }\n}\n\n\n\nexport default Experience","import React from 'react'\n\nconst NewSectionSkill = (props) =>{\n    const {skillList, isEdit} = props;\n\n    return (\n        <div id='skillListContainer'>\n            {skillList.map((skill)=>{\n                return (\n                    <div className='skillContainer' key={skill.id}>\n                        <div className='skillName'>{skill.name}</div>\n                        {/* <button className='btnDeleteSkill' onClick={()=> props.deleteSection(skill.id)}>\n                            <span className=\"material-icons\">clear</span>\n                        </button> */}\n                        <button className={isEdit ? 'btnDeleteSection':'hideVisibility'} onClick={()=> props.deleteSection(skill.id)}>\n                            <span className=\"material-icons\">clear</span>\n                        </button>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default NewSectionSkill","import React, {Component} from 'react';\nimport uniqid from 'uniqid';\nimport NewSectionSkill from './NewSectionSkill';\n\nclass Skills extends Component{\n    constructor(props){\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.deleteSection = this.deleteSection.bind(this);\n\n        this.state = {\n            skill: {\n                name: '',\n                id: uniqid(),\n            },\n            skillList: [],\n            formIsHidden: true,\n            btnIsHidden: false,\n        };\n      }\n\n    toggleForm = () =>{\n        // https://www.dev-tips-and-tricks.com/toggle-visibility-with-react\n        this.setState({\n            formIsHidden: !this.state.formIsHidden,\n            btnIsHidden: !this.state.btnIsHidden\n        })\n    }\n    \n    handleChange = (e) =>{\n        this.setState(prevState =>({\n            skill: {...prevState.skill, [e.target.name]:e.target.value}\n          }));\n    }\n\n    clearForm = () => {\n        console.log(this.state.skill.id);\n        this.setState(prevState =>({\n            skill: {...prevState.skill,\n                name: '',\n                id: uniqid(),\n            }\n          }));\n    }\n\n    cancelForm = () => {\n        // reset form inputs, hide form, unhide new button\n        this.clearForm();\n        this.toggleForm();\n    }\n\n    onSubmitForm = (e) =>{\n        e.preventDefault();\n        this.setState({\n            skillList: this.state.skillList.concat(this.state.skill)\n        });\n        this.clearForm();\n        this.toggleForm();\n    }\n\n    deleteSection = (id) => {\n        console.log(id);\n        // https://stackoverflow.com/a/48598110\n        this.setState((prevState)=>({\n            skillList: prevState.skillList.filter(skill=>skill.id!==id),\n        }))\n    }\n\n    \n    \n    render () {\n        const { skillList } = this.state;\n        const { isEdit } = this.props;\n\n        return (\n        <div id='skillsContainer'>\n            <div id='skillsHeader'>Skills</div>\n            <NewSectionSkill isEdit={isEdit} skillList={skillList} deleteSection={this.deleteSection}/>\n            <form id='skillForm' onSubmit={this.onSubmitForm} className={(this.state.formIsHidden || !isEdit) ? 'hide':'form'}>\n                {/* skill name */}\n                <div className='formDetail'>\n                    <label htmlFor='skillNameInput'>Skill Name: </label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.skill.name}\n                        type='text'\n                        id='skillNameInput'\n                        name='name'\n                    />\n                </div>\n                <div className='formBtnContainer'>\n                    <button\n                        id='btnAddSkill'\n                        type='submit'\n                        className='btnForm'\n                    >\n                        <span className='material-icons'>add_circle_outline</span>\n                    Add</button>\n\n                    <button\n                        id='btnCancelSkill'\n                        type='button'\n                        onClick={this.cancelForm}\n                        className='btnForm'\n                    > \n                        <span className=\"material-icons\">clear</span>\n                    Cancel</button>\n                </div>\n            </form>\n            <button \n                id='btnNewSkill' \n                onClick={this.toggleForm}\n                className={(this.state.btnIsHidden || !isEdit) ? 'hide':'btnNewSection'}\n                > \n                <span className='material-icons'>add_circle_outline</span>\n            New</button>\n        </div>\n        )\n    }\n}\n\nexport default Skills","import React, { Component } from \"react\";\nimport './App.css'\nimport GeneralInfo from './components/GeneralInfo';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport Skills from './components/Skills';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.changeMode = this.changeMode.bind(this);\n\n    this.state = {\n      // mode: 'edit',\n      // otherMode: 'preview',\n      isEdit: true,\n    };\n  }\n\n  changeMode = (e) =>{\n    console.log(this);\n    console.log(this.state.isEdit);\n    // if (this.state.mode === 'edit'){\n    //   console.log(this.state.mode);\n    //   this.setState({mode: 'preview', otherMode: 'edit'}, ()=>{\n    //     // after mode is set to preview\n    //     console.log(this.state.mode);\n\n    //   });\n    // } else if (this.state.mode === 'preview') {\n    //   console.log(this.state.mode);\n    //   this.setState({mode: 'edit', otherMode: 'preview'}, ()=>{\n    //     // after mode is set to edit\n    //     console.log(this.state.mode);\n    //   });\n    // }\n    this.setState({\n      isEdit: !this.state.isEdit\n    })\n  }\n\n\n\n  render() {\n    const {isEdit} = this.state;\n\n    return (\n      <div id='entireContainer'>\n        <div id='headerContainer'>\n          <div id='header'>\n          <span className=\"material-icons\">assignment</span>\n            C.V. Builder</div>\n          <button id='btnMode' onClick={this.changeMode}>{this.state.isEdit ? 'preview':'edit'}</button>\n        </div>\n        <div id='cvContainer'>\n          <GeneralInfo />\n          <Education isEdit={isEdit}/>\n          <Experience isEdit={isEdit}/>\n          <Skills isEdit={isEdit}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}